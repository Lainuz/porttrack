# .github/workflows/ci-cd.yml

name: CI/CD PortTrack

on:
  push:
    branches: [main, develop]
  pull_request:

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: porttrack
  ECS_SERVICE: porttrack-service
  ECS_CLUSTER: porttrack-cluster

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v4

      - name: Configurar JDK
        uses: actions/setup-java@v4
        with:
          java-version: "17"

      - name: Ejecutar pruebas
        run: |
          ./gradlew test

      - name: Configurar AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login en ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Construir y publicar imagen Docker
        run: |
          docker build -t $ECR_REPOSITORY:latest .
          docker tag $ECR_REPOSITORY:latest ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:latest
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:latest

      - name: Desplegar en ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ecs-task-def.json
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
